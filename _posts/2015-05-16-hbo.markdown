---
layout: post
title:  "HBO Nordic series!"
date:   2015-05-20 20:09:37
categories: hbo series
---

<script>
(function() {
    var checkReady = function(callback) {
        if (window.jQuery) {
            callback(jQuery);
        }
        else {
            window.setTimeout(function() { checkReady(callback); }, 100);
        }
    };

    checkReady(function(jQuery) {
	var seen = localStorage.seen;
	if(seen==null)seen="";
	var rating = localStorage.rating;
	var series_array = [];

	if(rating == null || rating == ""){
	   refresh();
	} else {
	    series_array = JSON.parse(rating);
	    create_table(series_array);
	    sorter();
	}

	function refresh(){
		jQuery.get('https://api-hbon.hbo.clearleap.com/cloffice/client/web/browse/f5dde064-495d-41dc-8cd7-cbb76baaf8d0',function(data){
		    var series_array = {};
		    $(data).find("item").each(function () {
			var el = $(this);
			var title = el.find("title").text();
			var guid = el.find("guid").text();

			series_array[title] = {"rating":null,"guid":guid};
		    });
		    create_table(series_array);
		    hboloaded();
		});
	}

	function create_table(series_array){
		for(var title in series_array){
		   if(seen.search(title+";") == -1){
		      var imdb = series_array[title]["rating"];
		      var guid = series_array[title]["guid"];
		      jQuery("#hbotable").append('<tr class="toBeSorted"'+((imdb!=null)?' data-rating="'+imdb+'"':'')+((guid!=null)?' data-guid="'+guid+'"':'')+'><td><a href="https://se.hbonordic.com/series/'+title.replace(" ","-").toLowerCase()+'/'+guid+'" class="hbotitle">'+title+'</a></td><td class="imdbrating">'+((imdb!=null)?imdb:'')+'</td><td class="seen" style="cursor:pointer">seen</td></tr>');	
		   }
		}
	}


	function hboloaded(){
		var $title = jQuery('.hbotitle');
		var i = 0;
		$title.each(function(){
		    var $this = jQuery(this);
		    var data = {
		        't':$this.html().trim().replace("&amp;", "&"),
		        'plot':'short',
			'type':'series',
		        'r':'json'
		    }
		    jQuery.get('http://www.omdbapi.com/',
		               data,
		               function(response){
		                   var rating = 0;
		                   if(response.Response == "True" && jQuery.isNumeric(response.imdbRating)){
		                      rating = response.imdbRating;
		                   }
		                   if(rating != 0){
		                      $this.parent().parent().find('.imdbrating').html(rating);
		                   }
		                   $this.parent().parent().attr('data-rating',rating).addClass("toBeSorted");
		                   i++;
		                   if(i == $title.length){
		                      sorter();
		                   }
		               },
		               'json');
		});
	}

        function sorter(){
	    jQuery("#sortimdb").click(sort_imdb);
	    jQuery("#sortname").click(sort_name);

	    jQuery(".seen").click(function(){
	        seen += jQuery(this).parent().find('.hbotitle').html() + ";";
	        if(localStorage.seen!=null)localStorage.removeItem("seen");
	        localStorage.seen=seen;
	        jQuery(this).parent().remove();
		make_zebra();
	    });

	    jQuery("#refresh").click(function(){
		jQuery(".toBeSorted").remove();
		refresh();
		return false;
	    });

	    var data = {};
	    jQuery("#hbotable").find("tr.toBeSorted").each(function(){
		var $this = jQuery(this);
		var title = $this.find(".hbotitle").text();
		var rating = $this.attr("data-rating");
		var guid = $this.attr("data-guid");
		data[title] = {"rating":rating,"guid":guid};
	    });

	    sort_imdb();
	    make_zebra();
	    if(localStorage.rating!=null)localStorage.removeItem("rating");
	    localStorage.rating=JSON.stringify(data);
        };

	function sort_imdb(){
  	  jQuery("#hbotable").find(".toBeSorted").sort(function(a,b){
            return b.dataset.rating - a.dataset.rating; 
          }).appendTo("#hbotable");
	  make_zebra();
	}

	function sort_name(){
	  jQuery("#hbotable").find(".hbotitle").parent().sort(function(a,b){
                    var A = a.getElementsByClassName("hbotitle")[0].innerHTML.toLowerCase();
		    var B = b.getElementsByClassName("hbotitle")[0].innerHTML.toLowerCase();
		    if (A < B){
		        return -1;
		    }else if (A > B){
		        return  1;
		    }else{
		        return 0;
		    }
                }).appendTo("#hbotable");
		make_zebra();
	}

	function make_zebra(){
	  $("tr").attr("style","");
	  $("tr:odd").attr("style","background:#ccc");
	}
    });
})();
</script>

<button id="refresh">refresh</button>

<table id="hbotable" style="width:100%;margin-bottom:100px">
  <tr>
    <td id="sortname" style="cursor:pointer">Series</td>
    <td id="sortimdb" style="cursor:pointer">Imdb</td>
    <td></td>
  </tr>
</table>
